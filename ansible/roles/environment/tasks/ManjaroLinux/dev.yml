---

#Git
- debug: msg="Install and config Git"

- name: Install Git
  pacman:
    name: git
    state: latest

- name: "Configuring Git Name - {{var_deploy_git_name}}"
  git_config:
    name: user.name
    value: "{{var_deploy_git_name}}"
    scope: global

- name: "Configuring Git e-mail - {{var_deploy_git_email}}"
  git_config:
    name: user.email
    value: "{{var_deploy_git_email}}"
    scope: global

#PYTHON
- debug: msg="Install and config Python"

- name: "Install Python"
  pacman:
    name: python

- name: "Install Python setup tools"
  pacman:
    name: python-setuptools

- name: "Install Pip"
  pacman:
    name: python-pip
    state: latest

- name: "Install Python Django"
  pacman:
    name: python-django
    state: latest

- name: "Install Django"
  pip:
   name: django

#GO
- debug: msg="Install and config GoLang"

#TODO n√£o usar. Manter a instalacao via GVM
#- name: "Install GoLang"
#  pacman:
#    name: go
#    state: latest

- name: "Install Go via GVM"
  command: "zsh < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)"
  ignore_errors: yes

#NODE
- debug: msg="Install and config NodeJS"

- name: "Install NodeJS"
  pacman:
    name: nodejs
    state: latest

- name: "Install npm"
  pacman:
    name: npm
    state: latest

- name: "Install bower node.js package globally - npm install -g bowers"
  npm:
    name: bower
    global: yes

#DOCKER
- debug: msg="Install and config Docker"

- name: "Install Docker"
  pacman:
    name: docker
    state: latest

- name: "Start Docker service - Enable Docker" #TODO reescrever com funcao especifica do ansible
  command: sudo systemctl enable docker

- name: "Start Docker service" #TODO reescrever com funcao especifica do ansible
  command: sudo systemctl start docker

- name: "Installing Docker Compose"
  pip:
   name: docker-compose

- name: "Installing dependencies docker compose"
  pip:
   name: backports.ssl_match_hostname
   extra_args: --upgrade

- name: Adding user to group docker
  command: useradd -G "docker" "{{ var_deploy_user }}"
  ignore_errors: yes

#- name: "Add user {{ var_deploy_user }} to group docker"
#  user:
#    name: "{{ var_deploy_user }}"
#    groups: docker,adm,wheel,lp,network,power
#
#- name: "Add user {{ var_deploy_user }} to group {{ var_deploy_user }}" #TODO debito tecnico
#  user:
#    name: "{{ var_deploy_user }}"
#    group: "{{ var_deploy_user }}"

- name: "Restart Docker service" #TODO reescrever com funcao especifica do ansible
  command: sudo systemctl restart docker

- name: "Install CTOP"
  command: sudo wget https://github.com/bcicen/ctop/releases/download/v0.7.1/ctop-0.7.1-linux-amd64 -O /usr/local/bin/ctop

- name: "Set permission for CTOP"
  command: sudo chmod +x /usr/local/bin/ctop

#TODO - Seria interessante configurar uma maneira de fazer o docker login antes
- name: Pull Docker Images
  docker_image:
    name: "{{item.image}}"
  with_items:
    - { image: "postgres" }
    - { image: "mongo" }
    - { image: "mysql" }
    - { image: "rabbitmq" }
    - { image: "spotify/kafka" }
  when: varfile_install_dev_docker_images
